apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "barman.fullname" . }}
  labels:
    {{- include "barman.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "barman.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.deployment.strategy.type | quote }}
  template:
    metadata:
      labels:
        {{- include "barman.labels" . | nindent 8 }}
    spec:
      containers:
        - name: barman
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # workaround for https://github.com/ubc/barman-docker/pull/4
          command: ["tini", "--", "/entrypoint.sh"]
          args: ["cron", "-L", "4", "-f"]
          {{- if .Values.prometheus.enabled }}
          ports:
            - name: prom-exporter
              containerPort: {{ .Values.prometheus.service.internalPort }}
              protocol: TCP
          {{- end }}
          {{/*
          Fix permissions & owner of .pgpass file
          https://www.postgresql.org/docs/9.4/libpq-pgpass.html
          */}}
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "HOME=/home/barman && cp /.pgpass $HOME/ && chown barman:barman $HOME/.pgpass && chmod 600 $HOME/.pgpass"
          envFrom:
            - configMapRef:
                name: {{ include "barman.fullname" . }}-config
          volumeMounts:
            - mountPath: /var/lib/barman
              name: data
              subPath: data
            - mountPath: /var/lib/barman/recover
              name: recover
              subPath: recover
            - mountPath: /etc/barman/barman.d
              name: barman-backups-config
            - mountPath: /etc/barman.conf
              name: barman-global-config
              subPath: barman.conf
            - mountPath: /.pgpass
              name: barman-pgpass-secret
              subPath: .pgpass
            - mountPath: /etc/cron.d/barman
              name: barman-cron-config
              subPath: barman
          {{- with .Values.deployment.additionalVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end  }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
        {{- if not .Values.persistence.data.enabled }}
          emptyDir: {}
        {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "barman.fullname" . }}-data
        {{- end }}
        - name: recover
        {{- if not .Values.persistence.recover.enabled }}
          emptyDir: {}
        {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "barman.fullname" . }}-recover
        {{- end }}
        - name: barman-backups-config
          configMap:
            name: {{ include "barman.fullname" . }}-backups-config
        - name: barman-global-config
          configMap:
            name: {{ include "barman.fullname" . }}-global-config
        - name: barman-pgpass-secret
          secret:
            secretName: {{ include "barman.fullname" . }}-pgpass-secret
            defaultMode: 0600
        - name: barman-cron-config
          configMap:
            name: {{ include "barman.fullname" . }}-cron-config
      {{- with .Values.deployment.additionalVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end  }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
    {{- end }}
