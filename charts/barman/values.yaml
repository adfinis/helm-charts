image:
  # -- Container image to deploy
  repository: ubcctlt/barman
  # -- When to pull the container image
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart version.
  tag: ""

# -- Resource limits and requests
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    memory: 256Mi

deployment:
  strategy:
    # -- Specify the strategy used to replace old Pods by new ones
    type: RollingUpdate
  # -- Specify additional VolumeMounts for the barman container
  additionalVolumeMounts: []
  # -- Specify additional Volumes for the deployment
  additionalVolumes: []

persistence:
  data:
    # -- Enable persistent storage for backup data
    enabled: true
    # -- Access mode for persistent storage
    accessMode: ReadWriteOnce
    # -- Size of storage volume
    size: 20Gi
    # -- Storage class
    storageClass: ""
  recover:
    # -- Enable persistent storage for recovery
    enabled: false
    # -- Access mode for persistent storage
    accessMode: ReadWriteOnce
    # -- Size of storage volume
    size: 4Gi
    # -- Storage class
    storageClass: ""

rbac:
  # -- Whether to create RBAC or not
  create: false

secret:
  # -- Whether to create and manage the barman-pgpass-secret
  create: true

barman:
  # -- Barman backup method
  backupMethod: postgres
  # -- Barman backup options
  backupOptions: concurrent_backup
  # -- Barman home directory
  backupDir: /var/lib/barman
  # -- Barman user
  barmanUser: barman
  # -- Barman backup compression
  compression: gzip
  # -- Barman retention policy
  retentionPolicy: "RECOVERY WINDOW of 1 MONTH"
  # -- Barman last backup maximum age
  lastBackupMaximumAge: "1 day"
  # -- Barman backup schedule
  backupSchedule: "0 4 * * *"
  # -- Database slot name to be created/used
  databaseSlotName: barman

  backups:
      # -- Barman retention policy
    - retentionPolicy: "RECOVERY WINDOW of 1 MONTH"
      # -- Barman backup method
      backupMethod: postgres
      # -- Database slot name to be created/used
      databaseSlotName: barman
      # -- Barman last backup maximum age
      lastBackupMaximumAge: "1 day"
      # -- Barman additional Parameters for configuration File
      additionalConfiguration: ""
      postgresql:
        # -- Postgresql host
        host: postgresql
        # -- Postgresql port
        port: 5432
        # -- Postgresql super user
        superUser: postgres
        # -- Postgresql super user password
        superUserPassword: postgres
        # -- Postgresql super user database
        superUserDatabase: postgres
        # -- Postgresql replication user
        replicationUser: barman
        # -- Postgresql replication password
        replicationPassword: barman
      # -- namespace where postgresql is deployed
      ## not active when barman.createRbac is false
      namespace: postgresql
      # -- service account of the postgresql deployment
      ## not active when barman.createRbac is false
      serviceaccount: postgresql


prometheus:
  # -- Enable Prometheus integration
  enabled: true
  service:
    # -- Prometheus exporter service name
    name: barman-exporter
    # -- Prometheus exporter service internal port
    internalPort: 9780
    # -- Prometheus exporter service external port
    externalPort: 9780
    # -- Prometheus exporter service type
    type: ClusterIP
  serviceMonitor:
    # -- Labels to add to service monitor
    extraLabels: {}
    # -- Interval at which metrics should be scraped
    interval: "30s"
    # -- MetricRelabelConfigs to apply to samples before ingestion
    metricRelabelings: []
    # -- RelabelConfigs to apply to samples before scraping
    relabelings: []
  rules:
    # -- Enable Alertmanager rules
    enabled: false
    # -- Selector labels for Alertmanager rules
    selector: []
    # -- Additional labels for Alertmanager rules
    additionalLabels: []
    # -- Array of Alertmanager rules
    spec: []
