csi_attacher:
  image:
    # csi_attacher.image.repository -- Image Repo for csi-attacher
    repository: "quay.io/k8scsi/csi-attacher"
    # csi_attacher.image.tag -- Image Tag for csi-attacher
    tag: "v1.2.1"
    # csi_attacher.image.pullPolicy -- Image PullPolicy for csi-attacher
    pullPolicy: IfNotPresent
  # csi_attacher.resources -- resources for csi-attacher
  resources: {}
csi_driver:
  image:
    # csi_driver.image.repository -- Image Repo for csi-driver
    repository: "ghcr.io/adfinis-sygroup/huawei-csi-plugin"
    # csi_driver.image.tag -- Image Tag for csi-driver
    tag: "v2.2.RC3"
    # csi_driver.image.pullPolicy -- Image PullPolicy for csi-driver
    pullPolicy: IfNotPresent
  controller:
    # csi_driver.controller.securityContext -- securityContext for the huawei-csi-driver container in the controller deployment
    # @default -- -
    securityContext:
      runAsUser: 0
      runAsGroup: 0
    # csi_driver.controller.resources -- resources for csi-driver container within controller-deployment
    resources: {}
  node:
    # csi_driver.node.securityContext -- securityContext esacalates all the privileges for csi-driver container within node-daemonset
    # @default -- -
    securityContext:
      privileged: true
      capabilities:
        add:
        - "SYS_ADMIN"
      allowPrivilegeEscalation: true
    # csi_driver.node.resources -- resources for csi-driver container within node-daemonset
    resources: {}
csi_node_driver_registrar:
  image:
    # csi_node_driver_registrar.image.repository -- Image Repo for csi-node-driver-registrar
    repository: "quay.io/k8scsi/csi-node-driver-registrar"
    # csi_node_driver_registrar.image.tag -- Image Tag for csi-node-driver-registrar
    tag: "v1.2.0"
    # csi_node_driver_registrar.image.pullPolicy -- Image PullPolicy for csi-node-driver-registrar
    pullPolicy: IfNotPresent
  # csi_node_driver_registrar.resources -- resources for csi-node-driver-registrar
  resources: {}
csi_provisioner:
  image:
    # csi_provisioner.image.repository -- Image Repo for csi-provisioner
    repository: "quay.io/k8scsi/csi-provisioner"
    # csi_provisioner.image.tag -- Image Tag for csi-provisioner
    tag: "v1.5.0"
    # csi_provisioner.image.pullPolicy -- Image PullPolicy for csi-provisioner
    pullPolicy: IfNotPresent
  # csi_provisioner.resources -- resources for csi-provisioner
  resources: {}
csi_resizer:
  image:
    # csi_resizer.image.repository -- Image Repo for csi-resizer
    repository: "quay.io/k8scsi/csi-resizer"
    # csi_resizer.image.tag -- Image Tag for csi-resizer
    tag: "v0.5.0"
    # csi_resizer.image.pullPolicy -- Image PullPolicy for csi-resizer
    pullPolicy: IfNotPresent
  # csi_resizer.resources -- resources for csi-resizer
  resources: {}
csi_snapshot_controller:
  image:
    # csi_snapshot_controller.image.repository -- Image Repo for csi-snapshot-controller
    repository: "quay.io/k8scsi/csi-snapshot-controller"
    # csi_snapshot_controller.image.tag -- Image Tag for csi-snapshot-controller
    tag: "v2.1.0"
    # csi_snapshot_controller.image.pullPolicy -- Image PullPolicy for csi-snapshot-controller
    pullPolicy: IfNotPresent
  # csi_snapshot_controller.resources -- resources for csi-snapshot-controller
  resources: {}
csi_snapshotter:
  image:
    # csi_snapshotter.image.repository -- Image Repo for csi-snapshotter
    repository: "quay.io/k8scsi/csi-snapshotter"
    # csi_snapshotter.image.tag -- Image Tag for csi-snapshotter
    tag: "v2.1.0"
    # csi_snapshotter.image.pullPolicy -- Image PullPolicy for csi-snapshotter
    pullPolicy: IfNotPresent
  # csi_snapshotter.resources -- resources for csi-snapshotter
  resources: {}

# imagePullSecrets -- specifies the image pull secrets to be used
imagePullSecrets: []
# nameOverride -- specifies the name override to be used for helm
nameOverride: ""
# fullnameOverride -- specifies the full name override to be used for helm
fullnameOverride: ""

serviceAccount:
  # serviceAccount.create -- Whether to create serviceAccounts or not
  create: true
  # serviceAccount.annotations -- annotations to add to each service account
  annotations: {}

rbac:
  # rbac.create -- Whether to create RBAC or not
  create: true

features:
  resizing:
    # features.resizing.enabled -- specifies if resizing is enabled or not
    enabled: true
  snapshotting:
    # features.snapshotting.enabled -- specifies if snapshotting is enabled or not
    enabled: true
  multiController:
    # features.multiController.enabled -- specifies if multiController is enabled or not
    enabled: false

# controller -- different configuration options of controller deployment
# @default -- `{'replicaCount':1}`
controller:
  replicaCount: 1
  podSecurityContext: {}
  podAnnotations: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

# node -- different configuration options of node daemonset
# @default -- -
node:
  podAnnotations: {}
  podSecurityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

# csiconfig -- complete backend configuration for the csi controller (see [documentation](https://github.com/Huawei/eSDK_K8S_Plugin/tree/master/docs/en))
# @default -- -
csiconfig:
  backends:
    - name: "nfs-backend-01"
      storage: ""
      product: ""
      replicaBackend: "nfs-backend-02"
      urls:
        - url-1
        - url-2
      user:
      password:
      pools:
        - pool-1
        - pool-2
      parameters:
        portal: ""
    - name: "nfs-backend-02"
      storage: ""
      product: ""
      replicaBackend: "nfs-backend-01"
      urls:
        - url-1
        - url-2
      user:
      password:
      pools:
        - pool-1
        - pool-2
      parameters:
        portal: ""
