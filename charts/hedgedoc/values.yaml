# Default values for hedgedoc-apps.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # -- Override the repository
  repository: quay.io/hedgedoc/hedgedoc
  # -- Override the pullPolicy
  pullPolicy: IfNotPresent
  # -- Override the imaae tag
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Service configuration
service:
  port: 3000
  type: ClusterIP

# -- Main configuration for hedgedoc
hedgedoc:
  # -- Persistent Storage
  # Enable this if you don't want to loose media
  persistentStorage:
    enabled: true
    accessModes:
      - ReadWriteOnce
    volumeMode: Filesystem
    size: "10G"
    storageClass: "default"
  # -- Port for the pod
  port: 3000
  # -- Environment variables for Hedgedoc
  # @default -- See the [official docs for all variables](https://docs.hedgedoc.org/configuration/)
  env:
    # -- Node.js env
    NODE_ENV: "production"
    DEBUG: "false"
    ## Logging
    # CMD_CONFIG_FILE: ""
    # CMD_DB_URL: ""
    # CMD_LOGLEVEL: ""
    ## Security
    CMD_FORBIDDEN_NOTE_IDS: "robots.txt, favicon.ico, api, build, css, docs, fonts, js, uploads, vendor, views"
    CMD_IMAGE_UPLOAD_TYPE: "filesystem"
    # CMD_SOURCE_URL: ""
    CMD_TOOBUSY_LAG: 70
    CMD_DOMAIN: "localhost"
    CMD_URL_PATH: ""
    CMD_HOST: "0.0.0.0"
    # CMD_PATH: ""
    CMD_PROTOCOL_USESSL: "false"
    CMD_URL_ADDPORT: "false"
    # CMD_ALLOW_ORIGIN: ""
    # CMD_HSTS_ENABLE: ""
    # CMD_HSTS_INCLUDE_SUBDOMAINS: ""
    # CMD_HSTS_MAX_AGE: ""
    # CMD_HSTS_PRELOAD: ""
    # CMD_CSP_ENABLE: ""
    # CMD_CSP_ADD_DISQUS: ""
    # CMD_CSP_ADD_GOOGLE_ANALYTICS: ""
    # CMD_CSP_REPORTURI: ""
    # CMD_CSP_ALLOW_FRAMING: ""
    # CMD_CSP_ALLOW_PDF_EMBED: ""
    # CMD_COOKIE_POLICY: ""
    # CMD_ALLOW_GRAVATAR: "true"
    # CMD_ALLOW_ANONYMOUS: ""
    # CMD_ALLOW_ANONYMOUS_EDITS: ""
    # CMD_ALLOW_FREEURL: ""
    # CMD_REQUIRE_FREEURL_AUTHENTICATION: ""
    # CMD_DEFAULT_PERMISSION: ""
    # CMD_SESSION_LIFE: ""
    # CMD_SESSION_SECRET: "secret"
    ## Email
    # CMD_EMAIL: ""
    # CMD_ALLOW_EMAIL_REGISTER: ""
    ## Dropbox Login
    # CMD_DROPBOX_CLIENTID: ""
    # CMD_DROPBOX_CLIENTSECRET: ""
    ## Facebook Login
    # CMD_FACEBOOK_CLIENTID: ""
    # CMD_FACEBOOK_CLIENTSECRET: ""
    ## GitHub Login
    # CMD_GITHUB_CLIENTID: ""
    # CMD_GITHUB_CLIENTSECRET: ""
    ## GitLab Login
    # CMD_GITLAB_SCOPE: ""
    # CMD_GITLAB_BASEURL: ""
    # CMD_GITLAB_CLIENTID: ""
    # CMD_GITLAB_CLIENTSECRET: ""
    # CMD_GITLAB_VERSION: ""
    ## Google Login
    # CMD_GOOGLE_CLIENTID: ""
    # CMD_GOOGLE_CLIENTSECRET: ""
    # CMD_GOOGLE_HOSTEDDOMAIN: ""
    ## LDAP Login
    # CMD_LDAP_URL: ""
    # CMD_LDAP_BINDDN: ""
    # CMD_LDAP_BINDCREDENTIALS: ""
    # CMD_LDAP_SEARCHBASE: ""
    # CMD_LDAP_SEARCHFILTER: ""
    # CMD_LDAP_SEARCHATTRIBUTES: ""
    # CMD_LDAP_USERIDFIELD: ""
    # CMD_LDAP_USERNAMEFIELD: ""
    # CMD_LDAP_TLS_CA: ""
    # CMD_LDAP_PROVIDERNAME: ""
    ## Mattermost Login
    # CMD_MATTERMOST_BASEURL: ""
    # CMD_MATTERMOST_CLIENTID: ""
    # CMD_MATTERMOST_CLIENTSECRET: ""
    ## OAuth2 Login
    # CMD_OAUTH2_USER_PROFILE_URL: ""
    # CMD_OAUTH2_USER_PROFILE_USERNAME_ATTR: ""
    # CMD_OAUTH2_USER_PROFILE_DISPLAY_NAME_ATTR: ""
    # CMD_OAUTH2_USER_PROFILE_EMAIL_ATTR: ""
    # CMD_OAUTH2_USER_PROFILE_ID_ATTR: ""
    # CMD_OAUTH2_TOKEN_URL: ""
    # CMD_OAUTH2_AUTHORIZATION_URL: ""
    # CMD_OAUTH2_CLIENT_ID: ""
    # CMD_OAUTH2_CLIENT_SECRET: ""
    # CMD_OAUTH2_PROVIDERNAME: ""
    # CMD_OAUTH2_SCOPE: ""
    # CMD_OAUTH2_ROLES_CLAIM: ""
    # CMD_OAUTH2_ACCESS_ROLE: ""
    ## SAML Login
    # CMD_SAML_IDPSSOURL: ""
    # CMD_SAML_IDPCERT: ""
    # CMD_SAML_CLIENTCERT: ""
    # CMD_SAML_ISSUER: ""
    # CMD_SAML_DISABLEREQUESTEDAUTHNCONTEXT: ""
    # CMD_SAML_IDENTIFIERFORMAT: ""
    # CMD_SAML_GROUPATTRIBUTE: ""
    # CMD_SAML_REQUIREDGROUPS: ""
    # CMD_SAML_EXTERNALGROUPS: ""
    # CMD_SAML_ATTRIBUTE_ID: ""
    # CMD_SAML_ATTRIBUTE_USERNAME: ""
    # CMD_SAML_ATTRIBUTE_EMAIL: ""
    # CMD_SAML_PROVIDERNAME: ""
    ## Twitter Login
    # CMD_TWITTER_CONSUMERKEY: ""
    # CMD_TWITTER_CONSUMERSECRET: ""
    ## S3 Storage
    # CMD_S3_ACCESS_KEY_ID: ""
    # CMD_S3_SECRET_ACCESS_KEY: ""
    # CMD_S3_REGION: ""
    # CMD_S3_BUCKET: ""
    # CMD_S3_ENDPOINT ENV: ""
    # CMD_S3_FOLDER: ""
    # CMD_S3_PUBLIC_FILES: ""
    ## Azure Blob Storage
    # CMD_AZURE_CONNECTION_STRING: ""
    # CMD_AZURE_CONTAINER: ""
    ## Imgur Storage
    # CMD_IMGUR_CLIENTID: ""
    ## MinIO Storage
    # CMD_MINIO_ACCESS_KEY: ""
    # CMD_MINIO_SECRET_KEY: ""
    # CMD_MINIO_ENDPOINT: ""
    # CMD_MINIO_PORT: ""
    # CMD_MINIO_SECURE: ""
    ## Lutim Storage
    # CMD_LUTIM_URL: ""


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Configure autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- PostgreSQL chart configuration
#
# Reference: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
#
# If you want to use external database, just set postgresql.enabled to false
#
postgresql:
  enabled: true
  auth:
    username: hedgedoc
    password: hedgedoc
    database: hedgedoc
    volumePermissions:
      enabled: true


# -- Configure your external database here
# This is automatically used when postgresql.enabled is false.
externalDatabase:
  # -- Set the database type (postgresql|mysql)
  type: "postgresql"
  username: "setme"
  password: "changeme"
  host: "localhost"
  port: 5432
  database: "hedgedoc"

# --  Secrets
# Store your secrets in a K8s secret to not have to have
# in a cleartext format
# Example:
# kubectl create secret hedgedoc-secrets generic \
# --from-literal=CMD_DB_PASSWORD=rickastley \
# --from-literal=CMD_SESSION_SECRET=verysecure
existingSecret: ~
