{{- if and .Values.prometheus.enabled .Values.prometheus.rule.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ include "cert-manager-monitoring.fullname" . }}
  {{- if .Values.prometheus.rule.namespace }}
  namespace: {{ .Values.prometheus.rule.namespace }}
  {{- end }}
  labels:
    {{- include "cert-manager-monitoring.labels" . | nindent 4 }}
    {{- if .Values.prometheus.rule.additionalLabels }}
    {{- toYaml .Values.prometheus.rule.additionalLabels | nindent 4 }}
    {{- end }}
spec:
  groups:
  - name: cert-manager
    rules:
    {{- if .Values.prometheus.rule.alerts.absent }}
    - alert: CertManagerAbsent
      expr: absent(up{job="{{ .Values.prometheus.rule.alertConfigs.absent.job }}"})
      for: 10m
      annotations:
        summary: Cert Manager has dissapeared from Prometheus service discovery.
        runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagerabsent
        description: New certificates will not be able to be minted, and existing ones can't
          be renewed until cert-manager is back.
      labels:
        severity: critical
    {{- end }}
    {{- if .Values.prometheus.rule.alerts.expirysoon }}
    - alert: CertManagerCertExpirySoon
      annotations:
        dashboard_url: https://grafana.example.com/d/TvuRo2iMk/cert-manager
        description: {{`The domain that this cert covers will be unavailable after {{ $value
          | humanizeDuration }}. Clients using endpoints that this cert protects will start
          to fail in {{ $value | humanizeDuration }}.`}}
        runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagercertexpirysoon
        summary: {{`The cert '{{ $labels.name }}' is {{ $value | humanizeDuration }} from expiry,
          it should have renewed over a week ago.`}}
      expr: |
        avg by (exported_namespace, namespace, name) (
          certmanager_certificate_expiration_timestamp_seconds - time()
        ) < (21 * 24 * 3600) # 21 days in seconds
      for: 1h
      labels:
        severity: warning
    {{- end }}
    {{- if .Values.prometheus.rule.alerts.certnotready }}
    - alert: CertManagerCertNotReady
      annotations:
        dashboard_url: https://grafana.example.com/d/TvuRo2iMk/cert-manager
        description: This certificate has not been ready to serve traffic for at least 10m.
          If the cert is being renewed or there is another valid cert, the ingress controller
          _may_ be able to serve that instead.
        runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagercertnotready
        summary: {{`The cert '{{ $labels.name }}' is not ready to serve traffic.`}}
      expr: |
        max by (name, exported_namespace, namespace, condition) (
          certmanager_certificate_ready_status{condition!="True"} == 1
        )
      for: 10m
      labels:
        severity: critical
    {{- end }}
    {{- if .Values.prometheus.rule.alerts.hittingratelimits }}
    - alert: CertManagerHittingRateLimits
      annotations:
        dashboard_url: https://grafana.example.com/d/TvuRo2iMk/cert-manager
        description: Depending on the rate limit, cert-manager may be unable to generate
          certificates for up to a week.
        runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagerhittingratelimits
        summary: Cert manager hitting LetsEncrypt rate limits.
      expr: |
        sum by (host) (
          rate(certmanager_http_acme_client_request_count{status="429"}[5m])
        ) > 0
      for: 5m
      labels:
        severity: critical
    {{- end }}
    {{- with .Values.prometheus.rule.additionalAlerts }}
    {{ . | nindent 4 }}
    {{- end }}
{{- end }}
